{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/NewSelect.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport axios from \"axios\";\nimport { plotComparison } from \"./Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function SelectBox(tabledata) {\n  _s();\n  const geraeteList = tabledata.geraeteList;\n  console.log(\"geraeteList:\", geraeteList);\n  const setGeraetList = tabledata.setGeraetList;\n  const [selectedIds, setSelectedIds] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    console.log(value);\n    setSelectedIds(\n    // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\" , \") : value);\n    const currentValue = typeof value === \"string\" ? value.split(\",\") : value;\n    const respPromises = currentValue.map(item => getData(item));\n    console.log(respPromises);\n    Promise.all(respPromises).then(values => {\n      plotComparison(values);\n      console.log(values);\n    });\n    setGeraetList([]);\n    console.log(\"Geräte aus CurrentValue:\", currentValue);\n    var argString = currentValue.join(\"+\");\n    console.log(\"requesting:\", `/api/multiple_statistics/${argString}`);\n    axios.get(`/api/multiple_statistics/${argString}`).then(response => {\n      console.log(\"response:\", response.data);\n      setGeraetList(response.data.map(e => {\n        return {\n          id: e.deviceid,\n          messung: e.messung,\n          maxverbrauch: e.maxverbrauch,\n          durchschnitt: e.durchschnitsverbrauch\n        };\n      }));\n    });\n  };\n  const options = [];\n  for (var i = 1; i <= 56; i++) {\n    if (i !== 50 && i !== 30) {\n      options.push({\n        value: i,\n        text: `Gerät ${i}`\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-3\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-checkbox-label\",\n        children: \"Ger\\xE4te zum Vergleich w\\xE4hlen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-checkbox-label\",\n        id: \"demo-multiple-checkbox\",\n        multiple: true,\n        value: selectedIds,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Ger\\xE4te zum Vergleich w\\xE4hlen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(\" , \"),\n        MenuProps: MenuProps,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedIds.indexOf(option.value) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, option.text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"graphvergleich\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n  function getData(geraetNummer) {\n    if (geraetNummer !== \"-1\") {\n      return axios.get(`/api/get_graph_daten/${geraetNummer}`).then(response => {\n        console.log(response);\n        return {\n          id: geraetNummer,\n          data: response.data.messungen\n        };\n      });\n    }\n  }\n}\n_s(SelectBox, \"ndxFfIZ7sJtBEOivcsSBDBZx8+M=\");\n_c = SelectBox;\nvar _c;\n$RefreshReg$(_c, \"SelectBox\");","map":{"version":3,"names":["React","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","axios","plotComparison","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SelectBox","tabledata","geraeteList","console","log","setGeraetList","selectedIds","setSelectedIds","useState","handleChange","event","target","value","split","currentValue","respPromises","map","item","getData","Promise","all","then","values","argString","join","get","response","data","e","id","deviceid","messung","maxverbrauch","durchschnitt","durchschnitsverbrauch","options","i","push","text","m","selected","option","indexOf","geraetNummer","messungen"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/NewSelect.js"],"sourcesContent":["import * as React from \"react\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport axios from \"axios\";\nimport { plotComparison } from \"./Chart\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function SelectBox(tabledata) {\n  const geraeteList = tabledata.geraeteList;\n  console.log(\"geraeteList:\", geraeteList);\n  const setGeraetList = tabledata.setGeraetList;\n  const [selectedIds, setSelectedIds] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    console.log(value);\n    setSelectedIds(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\" , \") : value\n    );\n    const currentValue = typeof value === \"string\" ? value.split(\",\") : value;\n    const respPromises = currentValue.map((item) => getData(item));\n    console.log(respPromises);\n    Promise.all(respPromises).then((values) => {\n      plotComparison(values);\n      console.log(values);\n    });\n\n    setGeraetList([]);\n    console.log(\"Geräte aus CurrentValue:\", currentValue);\n    var argString = currentValue.join(\"+\");\n    console.log(\"requesting:\", `/api/multiple_statistics/${argString}`);\n    axios.get(`/api/multiple_statistics/${argString}`).then((response) => {\n      console.log(\"response:\", response.data);\n      setGeraetList(\n        response.data.map((e) => {\n          return {\n            id: e.deviceid,\n            messung: e.messung,\n            maxverbrauch: e.maxverbrauch,\n            durchschnitt: e.durchschnitsverbrauch,\n          };\n        })\n      );\n    });\n  };\n\n  const options = [];\n  for (var i = 1; i <= 56; i++) {\n    if (i !== 50 && i !== 30) {\n      options.push({ value: i, text: `Gerät ${i}` });\n    }\n  }\n\n  return (\n    <div className={\"my-3\"}>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-checkbox-label\">\n          Geräte zum Vergleich wählen\n        </InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={selectedIds}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Geräte zum Vergleich wählen\" />}\n          renderValue={(selected) => selected.join(\" , \")}\n          MenuProps={MenuProps}\n        >\n          {options.map((option) => (\n            <MenuItem key={option.text} value={option.value}>\n              <Checkbox checked={selectedIds.indexOf(option.value) > -1} />\n              <ListItemText primary={option.text} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <div className={\"graph-container\"}>\n        <div id=\"graphvergleich\"></div>\n      </div>\n    </div>\n  );\n\n  function getData(geraetNummer) {\n    if (geraetNummer !== \"-1\") {\n      return axios\n        .get(`/api/get_graph_daten/${geraetNummer}`)\n        .then((response) => {\n          console.log(response);\n          return { id: geraetNummer, data: response.data.messungen };\n        });\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}