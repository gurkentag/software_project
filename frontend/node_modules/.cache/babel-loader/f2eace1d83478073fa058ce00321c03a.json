{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/Sequenz.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { formatTimestamp } from \"./Chart\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst chartcolors = [\"#fc5c65\", \"#26de81\", \"#fed330\", \"#D980FA\", \"#4b7bec\", \"#a55eea\", \"#fd9644\", \"#1B1464\"];\nfunction getValues(id, callback) {\n  axios.get(`/api/get_sequenz_values?id=${id}`).then(response => {\n    console.log(\"response:\", response.data);\n    callback(response);\n  });\n}\nfunction buildGraph(values, device) {\n  const options = {\n    elements: {\n      point: {\n        borderWidth: 0,\n        radius: 10,\n        pointBackgroundColor: \"rgb(0,0,0,0)\"\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Lastsequenz\"\n      }\n    },\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: \"Energie in Watt\"\n        }\n      }\n    }\n  };\n  const datasets = [{\n    label: `Edison ‚Ññ ${device}`,\n    data: values.map(messungen => messungen[0].toFixed(2)),\n    borderColor: chartcolors,\n    backgroundColor: chartcolors\n  }];\n  console.log(\"values:\", values);\n  console.log(datasets);\n  const times = values.map(messungen => formatTimestamp(messungen[1]));\n  const data = {\n    labels: times,\n    datasets: datasets\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\nexport default function Sequenz(_ref) {\n  _s();\n  let {\n    label,\n    device,\n    id,\n    resetter,\n    showAll\n  } = _ref;\n  const [values, setValues] = useState([]);\n  const [toggleView, setToggleView] = useState(false);\n  function showGraph() {\n    if (values.length > 0) {\n      setToggleView(!toggleView);\n    } else {\n      getValues(id, response => {\n        setValues(response.data);\n        setToggleView(!toggleView);\n      });\n    }\n  }\n  function deleteSequenz(callback) {\n    axios.get(`/api/delete_sequenz/${id}`).then(response => {\n      console.log(\"response:\", response.data);\n      callback(response);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showAll || !label.includes(\"Auto\") ? \"sequenzContainer\" : \"sequenzContainer d-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lastsequenz \", label, \", Edison \\u2116 \", device]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: showGraph,\n        children: \"Graph anzeigen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger m-2\",\n        onClick: () => deleteSequenz(r => {\n          console.log(r);\n          resetter();\n        }),\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), toggleView ? buildGraph(values, device) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Sequenz, \"oyy44TawJrokxyU6TR93MjKqQNM=\");\n_c = Sequenz;\nvar _c;\n$RefreshReg$(_c, \"Sequenz\");","map":{"version":3,"names":["axios","useState","formatTimestamp","Line","chartcolors","getValues","id","callback","get","then","response","console","log","data","buildGraph","values","device","options","elements","point","borderWidth","radius","pointBackgroundColor","responsive","plugins","legend","position","title","display","text","scales","y","datasets","label","map","messungen","toFixed","borderColor","backgroundColor","times","labels","Sequenz","resetter","showAll","setValues","toggleView","setToggleView","showGraph","length","deleteSequenz","includes","r"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/Sequenz.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { formatTimestamp } from \"./Chart\";\n\nimport { Line } from \"react-chartjs-2\";\n\nconst chartcolors = [\n  \"#fc5c65\",\n  \"#26de81\",\n  \"#fed330\",\n  \"#D980FA\",\n  \"#4b7bec\",\n  \"#a55eea\",\n  \"#fd9644\",\n  \"#1B1464\",\n];\n\nfunction getValues(id, callback) {\n  axios.get(`/api/get_sequenz_values?id=${id}`).then((response) => {\n    console.log(\"response:\", response.data);\n    callback(response);\n  });\n}\n\nfunction buildGraph(values, device) {\n  const options = {\n    elements: {\n      point: {\n        borderWidth: 0,\n        radius: 10,\n        pointBackgroundColor: \"rgb(0,0,0,0)\",\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: \"Lastsequenz\",\n      },\n    },\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: \"Energie in Watt\",\n        },\n      },\n    },\n  };\n  const datasets = [\n    {\n      label: `Edison ‚Ññ ${device}`,\n      data: values.map((messungen) => messungen[0].toFixed(2)),\n      borderColor: chartcolors,\n      backgroundColor: chartcolors,\n    },\n  ];\n  console.log(\"values:\", values);\n  console.log(datasets);\n  const times = values.map((messungen) => formatTimestamp(messungen[1]));\n  const data = {\n    labels: times,\n    datasets: datasets,\n  };\n  return <Line options={options} data={data} />;\n}\n\nexport default function Sequenz({ label, device, id, resetter, showAll }) {\n  const [values, setValues] = useState([]);\n  const [toggleView, setToggleView] = useState(false);\n\n  function showGraph() {\n    if (values.length > 0) {\n      setToggleView(!toggleView);\n    } else {\n      getValues(id, (response) => {\n        setValues(response.data);\n        setToggleView(!toggleView);\n      });\n    }\n  }\n  function deleteSequenz(callback) {\n    axios.get(`/api/delete_sequenz/${id}`).then((response) => {\n      console.log(\"response:\", response.data);\n      callback(response);\n    });\n  }\n  return (\n    <>\n      <div\n        className={\n          showAll || !label.includes(\"Auto\")\n            ? \"sequenzContainer\"\n            : \"sequenzContainer d-none\"\n        }\n      >\n        <p>\n          Lastsequenz {label}, Edison ‚Ññ {device}\n        </p>\n        <button className=\"btn btn-primary m-2\" onClick={showGraph}>\n          Graph anzeigen\n        </button>\n        <button\n          className=\"btn btn-danger m-2\"\n          onClick={() =>\n            deleteSequenz((r) => {\n              console.log(r);\n              resetter();\n            })\n          }\n        >\n          üóëÔ∏è\n        </button>\n        {toggleView ? buildGraph(values, device) : <></>}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}