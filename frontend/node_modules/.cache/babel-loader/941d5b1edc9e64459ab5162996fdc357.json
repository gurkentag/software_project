{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js\";\nimport ReactDOM from 'react-dom/client';\nimport { CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis } from \"recharts\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTimestamp(unixtimestamp) {\n  var date = new Date(unixtimestamp * 1000);\n  var hours = String('00' + date.getHours());\n  var minutes = String('00' + date.getMinutes());\n  var seconds = String('00' + date.getSeconds());\n  var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n  return formattedTime;\n}\nexport function plotComparison(messungen1, messungen2, geraetNummer1, geraetNummer2) {\n  if (messungen1 === [] || messungen2 === []) {\n    return;\n  }\n  messungen1 = messungen1.sort((a, b) => a[1] - b[1]);\n  messungen1 = messungen1.map(messungen => [messungen[0].toFixed(2), formatTimestamp(messungen[1])]);\n  messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n  messungen2 = messungen2.map(messungen => [messungen[0].toFixed(2), formatTimestamp(messungen[1])]);\n  ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render( /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 1400,\n    height: 400,\n    data: messungen1 //TODO: damit die Tooltips funktionieren muss hier und in Zeile 41 was geändert werden\n    ,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*/\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      dataKey: \"0\",\n      domain: [0, 8]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      name: 'Gerät ' + geraetNummer1\n      //data={messungen1}\n      ,\n      type: \"monotone\",\n      dataKey: \"0\",\n      stroke: \"#274796\",\n      dot: false,\n      strokeWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      name: 'Gerät ' + geraetNummer2,\n      data: messungen2,\n      type: \"monotone\",\n      dataKey: \"0\",\n      stroke: \"#F3942F\",\n      dot: false,\n      strokeWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this));\n}","map":{"version":3,"names":["ReactDOM","CartesianGrid","Legend","Line","LineChart","Tooltip","XAxis","YAxis","React","formatTimestamp","unixtimestamp","date","Date","hours","String","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substring","length","plotComparison","messungen1","messungen2","geraetNummer1","geraetNummer2","sort","a","b","map","messungen","toFixed","createRoot","document","getElementById","render","top","right","left","bottom"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js"],"sourcesContent":["import ReactDOM from 'react-dom/client';\nimport {CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis} from \"recharts\";\nimport React from \"react\";\n\nfunction formatTimestamp(unixtimestamp) {\n    var date = new Date(unixtimestamp * 1000);\n    var hours = String('00' + date.getHours())\n    var minutes = String('00' + date.getMinutes());\n    var seconds = String('00' + date.getSeconds());\n    var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n    return formattedTime;\n}\n\nexport function plotComparison(messungen1, messungen2, geraetNummer1, geraetNummer2) {\n    if(messungen1 === [] || messungen2 === []){\n        return\n    }\n    messungen1 = messungen1.sort((a, b) => a[1] - b[1])\n    messungen1 = messungen1.map(messungen => ([messungen[0].toFixed(2), formatTimestamp(messungen[1])]))\n    messungen2 = messungen2.sort((a, b) => a[1] - b[1])\n    messungen2 = messungen2.map(messungen => ([messungen[0].toFixed(2), formatTimestamp(messungen[1])]))\n    ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render(\n        <LineChart\n            width={1400}\n            height={400}\n            data={messungen1}       //TODO: damit die Tooltips funktionieren muss hier und in Zeile 41 was geändert werden\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*/ />\n            <YAxis dataKey=\"0\" domain={[0, 8]}/>\n            <Tooltip/>\n            <Legend/>\n            <Line name={'Gerät '+geraetNummer1}\n                  //data={messungen1}\n                  type=\"monotone\"\n                  dataKey=\"0\"\n                  stroke=\"#274796\"\n                  dot={false}\n                  strokeWidth={2}\n            />\n            <Line name={'Gerät '+geraetNummer2}\n                  data={messungen2}\n                  type=\"monotone\"\n                  dataKey=\"0\"\n                  stroke=\"#F3942F\"\n                  dot={false}\n                  strokeWidth={2}\n            />\n        </LineChart>)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}