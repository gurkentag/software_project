{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/PowerConsumption.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function getPowerConsumption(geraetNummer, elementId) {\n  function makerequest() {\n    if (geraetNummer !== '-1') {\n      axios.get(`/api/getmqtt_messung/${geraetNummer}`).then(response => {\n        console.log(response);\n        var messung = response.data.messung;\n        ReactDOM.createRoot(document.getElementById(`${elementId}`)).render( /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: [`aktueller Verbrauch von Gerät ${geraetNummer}`, \": \", messung.toFixed(2), \" Wt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 85\n        }, this));\n      });\n    }\n  }\n  makerequest();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${elementId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\nexport function getAvrgPowerConsumption(geraetNummer, elementId) {\n  function makerequest2() {\n    if (geraetNummer !== '-1') {\n      axios.get(`/api/get_average/${geraetNummer}`).then(response => {\n        console.log(response);\n        var durchschnittsverbrauch = response.data.durchschnitsverbrauch;\n        ReactDOM.createRoot(document.getElementById(`${elementId}`)).render( /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: [`durchschnittlicher Verbrauch von Gerät ${geraetNummer}`, \": \", durchschnittsverbrauch.toFixed(2), \"Wt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 85\n        }, this));\n      });\n    }\n  }\n  makerequest2();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${elementId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\nexport function getMaxPowerConsumption(geraetNummer, elementId) {\n  function makerequest3() {\n    if (geraetNummer !== '-1') {\n      axios.get(`/api/get_maximum/${geraetNummer}`).then(response => {\n        console.log(response);\n        var maxverbrauch = response.data.maxverbrauch;\n        ReactDOM.createRoot(document.getElementById(`${elementId}`)).render( /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: [`maximaler Verbrauch von Gerät ${geraetNummer}`, \": \", maxverbrauch.toFixed(2), \" Wt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 85\n        }, this));\n      });\n    }\n  }\n  makerequest3();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${elementId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["React","axios","ReactDOM","getPowerConsumption","geraetNummer","elementId","makerequest","get","then","response","console","log","messung","data","createRoot","document","getElementById","render","toFixed","getAvrgPowerConsumption","makerequest2","durchschnittsverbrauch","durchschnitsverbrauch","getMaxPowerConsumption","makerequest3","maxverbrauch"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/PowerConsumption.js"],"sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n\nexport default function getPowerConsumption(geraetNummer, elementId) {\n    function makerequest() {\n        if (geraetNummer !== '-1') {\n            axios.get(`/api/getmqtt_messung/${geraetNummer}`).then(response => {\n                console.log(response)\n                var messung = response.data.messung;\n\n                ReactDOM.createRoot(document.getElementById(`${elementId}`)).render(<p\n                    className=\"result\">{`aktueller Verbrauch von Gerät ${geraetNummer}`}: {messung.toFixed(2)} Wt</p>)\n            })\n        }\n    }\n\n    makerequest()\n    return (\n        <>\n            {<div id={`${elementId}`}></div>}\n        </>\n    )\n}\n\nexport function getAvrgPowerConsumption(geraetNummer, elementId) {\n    function makerequest2() {\n        if (geraetNummer !== '-1') {\n            axios.get(`/api/get_average/${geraetNummer}`).then(response => {\n                console.log(response)\n                var durchschnittsverbrauch = response.data.durchschnitsverbrauch;\n\n                ReactDOM.createRoot(document.getElementById(`${elementId}`)).render(<p\n                    className=\"result\">{`durchschnittlicher Verbrauch von Gerät ${geraetNummer}`}: {durchschnittsverbrauch.toFixed(2)}Wt</p>)\n            })\n        }\n\n    }\n\n    makerequest2()\n    return (\n        <>\n            {<div id={`${elementId}`}></div>}\n        </>\n    )\n}\n\nexport function getMaxPowerConsumption(geraetNummer, elementId) {\n    function makerequest3() {\n        if (geraetNummer !== '-1') {\n            axios.get(`/api/get_maximum/${geraetNummer}`).then(response => {\n                console.log(response)\n                var maxverbrauch = response.data.maxverbrauch;\n\n                ReactDOM.createRoot(document.getElementById(`${elementId}`)).render(<p\n                    className=\"result\">{`maximaler Verbrauch von Gerät ${geraetNummer}`}: {maxverbrauch.toFixed(2)} Wt</p>)\n\n            })\n        }\n    }\n\n    makerequest3()\n    return (\n        <>\n            {<div id={`${elementId}`}></div>}\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAAC;AAAA;AAEjC,eAAe,SAASC,mBAAmB,CAACC,YAAY,EAAEC,SAAS,EAAE;EACjE,SAASC,WAAW,GAAG;IACnB,IAAIF,YAAY,KAAK,IAAI,EAAE;MACvBH,KAAK,CAACM,GAAG,CAAE,wBAAuBH,YAAa,EAAC,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAI;QAC/DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIG,OAAO,GAAGH,QAAQ,CAACI,IAAI,CAACD,OAAO;QAEnCV,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAE,GAAEX,SAAU,EAAC,CAAC,CAAC,CAACY,MAAM,eAAC;UAChE,SAAS,EAAC,QAAQ;UAAA,WAAG,iCAAgCb,YAAa,EAAC,QAAIQ,OAAO,CAACM,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,CAAC;MAC1G,CAAC,CAAC;IACN;EACJ;EAEAZ,WAAW,EAAE;EACb,oBACI;IAAA,uBACK;MAAK,EAAE,EAAG,GAAED,SAAU;IAAE;MAAA;MAAA;MAAA;IAAA;EAAO,iBACjC;AAEX;AAEA,OAAO,SAASc,uBAAuB,CAACf,YAAY,EAAEC,SAAS,EAAE;EAC7D,SAASe,YAAY,GAAG;IACpB,IAAIhB,YAAY,KAAK,IAAI,EAAE;MACvBH,KAAK,CAACM,GAAG,CAAE,oBAAmBH,YAAa,EAAC,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAI;QAC3DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIY,sBAAsB,GAAGZ,QAAQ,CAACI,IAAI,CAACS,qBAAqB;QAEhEpB,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAE,GAAEX,SAAU,EAAC,CAAC,CAAC,CAACY,MAAM,eAAC;UAChE,SAAS,EAAC,QAAQ;UAAA,WAAG,0CAAyCb,YAAa,EAAC,QAAIiB,sBAAsB,CAACH,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,CAAC;MACjI,CAAC,CAAC;IACN;EAEJ;EAEAE,YAAY,EAAE;EACd,oBACI;IAAA,uBACK;MAAK,EAAE,EAAG,GAAEf,SAAU;IAAE;MAAA;MAAA;MAAA;IAAA;EAAO,iBACjC;AAEX;AAEA,OAAO,SAASkB,sBAAsB,CAACnB,YAAY,EAAEC,SAAS,EAAE;EAC5D,SAASmB,YAAY,GAAG;IACpB,IAAIpB,YAAY,KAAK,IAAI,EAAE;MACvBH,KAAK,CAACM,GAAG,CAAE,oBAAmBH,YAAa,EAAC,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAI;QAC3DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIgB,YAAY,GAAGhB,QAAQ,CAACI,IAAI,CAACY,YAAY;QAE7CvB,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAE,GAAEX,SAAU,EAAC,CAAC,CAAC,CAACY,MAAM,eAAC;UAChE,SAAS,EAAC,QAAQ;UAAA,WAAG,iCAAgCb,YAAa,EAAC,QAAIqB,YAAY,CAACP,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,CAAC;MAE/G,CAAC,CAAC;IACN;EACJ;EAEAM,YAAY,EAAE;EACd,oBACI;IAAA,uBACK;MAAK,EAAE,EAAG,GAAEnB,SAAU;IAAE;MAAA;MAAA;MAAA;IAAA;EAAO,iBACjC;AAEX"},"metadata":{},"sourceType":"module"}