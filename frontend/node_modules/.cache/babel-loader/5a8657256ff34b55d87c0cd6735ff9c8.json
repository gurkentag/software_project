{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js\";\nimport ReactDOM from 'react-dom/client';\nimport React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { experimentalStyled } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Graphen von ausgewählten Geräten'\n    }\n  }\n};\nfunction formatTimestamp(unixtimestamp) {\n  var date = new Date(unixtimestamp * 1000);\n  var hours = String('00' + date.getHours());\n  var minutes = String('00' + date.getMinutes());\n  var seconds = String('00' + date.getSeconds());\n  var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n  return formattedTime;\n}\n// function UserException(message) {\n//     this.message = message;\n//     this.name = 'UserException';\n//   }\n\nexport function plotComparison(gerätArray) {\n  // if(messungen1 === [] || messungen2 === []){\n  //     return //Überprüfen, ob Array leer ist (funktioniert noch nicht)\n  // }\n  var times;\n  const datasets = [];\n  for (var i = 0; i <= gerätArray.length; i++) {\n    const geraetNummer = gerätArray[i].id;\n    const messungen = gerätArray[i].data.sort((a, b) => a[1] - b[1]);\n    var times = messungen.map(messungen => formatTimestamp(messungen[1]));\n    const dataRounded = messungen.map(messungen => messungen[0].toFixed(2));\n    datasets.push({\n      label: `Gerät ${geraetNummer}`,\n      data: dataRounded,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    });\n  }\n\n  //  messungen1 = messungen1.sort((a, b) => a[1] - b[1])\n  //  messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n  //    var times = messungen1.map(messungen =>  formatTimestamp(messungen[1]))\n  // if (times.length === 0){\n  //      times = messungen2.map(messungen =>  formatTimestamp(messungen[1]));\n  // } \n  // const data1 = messungen1.map(messungen => messungen[0].toFixed(2));\n  // messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n  // if(geraetNummer1===geraetNummer2){\n  //     console.log('Gerät ist schon ausgewählt');\n  //     return;\n  // }\n  //     throw new UserException('Gerät ist schon ausgewählt');\n  //     return;\n  // }\n  // const data2 =  messungen2.map(messungen => messungen[0].toFixed(2));\n  const data = {\n    labels: times,\n    datasets: datasets\n\n    // borderColor: 'rgb(106, 27, 150)',\n    // backgroundColor: 'rgba(106, 27, 154, 0.5)' violett\n\n    // borderColor: 'rgb(53, 162, 235)',\n    // backgroundColor: 'rgba(53, 162, 235, 0.5)' blau\n\n    // borderColor: 'rgb(255, 236, 179)',\n    // backgroundColor: 'rgba(255, 236, 179, 0.5)'\n  };\n\n  ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render( /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'm-5',\n      id: \"graphdaten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["ReactDOM","React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","experimentalStyled","register","options","responsive","plugins","legend","position","title","display","text","formatTimestamp","unixtimestamp","date","Date","hours","String","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substring","length","plotComparison","gerätArray","times","datasets","i","geraetNummer","id","messungen","data","sort","a","b","map","dataRounded","toFixed","push","label","borderColor","backgroundColor","labels","createRoot","document","getElementById","render"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js"],"sourcesContent":["import ReactDOM from 'react-dom/client';\nimport React from \"react\";\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n  import { Line } from 'react-chartjs-2';\nimport { experimentalStyled } from '@mui/material';\n\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n  \n  export const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Graphen von ausgewählten Geräten',\n      },\n    },\n  };\n\nfunction formatTimestamp(unixtimestamp) {\n    var date = new Date(unixtimestamp * 1000);\n    var hours = String('00' + date.getHours())\n    var minutes = String('00' + date.getMinutes());\n    var seconds = String('00' + date.getSeconds());\n    var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n    return formattedTime;\n}\n// function UserException(message) {\n//     this.message = message;\n//     this.name = 'UserException';\n//   }\n\nexport function plotComparison(gerätArray) {\n    // if(messungen1 === [] || messungen2 === []){\n    //     return //Überprüfen, ob Array leer ist (funktioniert noch nicht)\n    // }\n   var times;\n   const datasets=[];\n\n    for(var i=0;i<=gerätArray.length;i++){\n       const geraetNummer = gerätArray[i].id;\n       const messungen= gerätArray[i].data.sort((a, b) => a[1] - b[1]);\n       var times = messungen.map(messungen =>  formatTimestamp(messungen[1]));\n       const dataRounded = messungen.map(messungen => messungen[0].toFixed(2));\n       datasets.push(\n       {\n        label: `Gerät ${geraetNummer}`,\n        data: dataRounded,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      })\n    }\n    \n\n    //  messungen1 = messungen1.sort((a, b) => a[1] - b[1])\n    //  messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n    //    var times = messungen1.map(messungen =>  formatTimestamp(messungen[1]))\n    // if (times.length === 0){\n    //      times = messungen2.map(messungen =>  formatTimestamp(messungen[1]));\n    // } \n    // const data1 = messungen1.map(messungen => messungen[0].toFixed(2));\n    // messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n    // if(geraetNummer1===geraetNummer2){\n    //     console.log('Gerät ist schon ausgewählt');\n    //     return;\n    // }\n    //     throw new UserException('Gerät ist schon ausgewählt');\n    //     return;\n    // }\n    // const data2 =  messungen2.map(messungen => messungen[0].toFixed(2));\n    const data = {\n        labels: times,\n        datasets: datasets,\n          \n            // borderColor: 'rgb(106, 27, 150)',\n            // backgroundColor: 'rgba(106, 27, 154, 0.5)' violett\n       \n            // borderColor: 'rgb(53, 162, 235)',\n        // backgroundColor: 'rgba(53, 162, 235, 0.5)' blau\n           \n            // borderColor: 'rgb(255, 236, 179)',\n            // backgroundColor: 'rgba(255, 236, 179, 0.5)'\n\n        \n          };\n        \n     \n    ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render(\n        <Line options={options} data={data} />\n\n    \n    )\n    \n   \n    return (\n        <>\n       \n            {<div className={'m-5'} id=\"graphdaten\"></div>}\n        \n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}