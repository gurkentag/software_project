{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/PowerConsumption.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function getPowerConsumptionValue(geraetNummer) {\n  if (geraetNummer !== '-1') {\n    return axios.get(`/api/getmqtt_messung/${geraetNummer}`).then(response => {\n      console.log(\"test\", response);\n      return {\n        id: geraetNummer,\n        data: response.data.messung\n      };\n    });\n  }\n}\n\n// function getPowerConsumption(geraetNummer, elementId) {\n//     function makerequest() {\n//         if (geraetNummer !== '-1') {\n//             axios.get(`/api/getmqtt_messung/${geraetNummer}`).then(response => {\n//                 console.log(response)\n//                 var messung = response.data.messung;\n\n//                 ReactDOM.createRoot(document.getElementById(`${elementId}`)).render(<p\n//                     className=\"result\">{`aktueller Verbrauch von Gerät ${geraetNummer}`}: {messung.toFixed(2)} Wt</p>)\n//             })\n//         }\n//     }\n\n//     makerequest()\n//     return (\n//         <>\n//             {<div id={`${elementId}`}></div>}\n//         </>\n//     )\n// }\n\nexport function getAvrgPowerConsumption(geraetNummer, elementId) {\n  function makerequest2() {\n    if (geraetNummer !== '-1') {\n      axios.get(`/api/get_average/${geraetNummer}`).then(response => {\n        console.log(response);\n        var durchschnittsverbrauch = response.data.durchschnitsverbrauch;\n        ReactDOM.createRoot(document.getElementById(`${elementId}`)).render( /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: [`durchschnittlicher Verbrauch von Gerät ${geraetNummer}`, \": \", durchschnittsverbrauch.toFixed(2), \"Wt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 85\n        }, this));\n      });\n    }\n  }\n  makerequest2();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${elementId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\nexport function getMaxPowerConsumption(geraetNummer, elementId) {\n  function makerequest3() {\n    if (geraetNummer !== '-1') {\n      axios.get(`/api/get_maximum/${geraetNummer}`).then(response => {\n        console.log(response);\n        var maxverbrauch = response.data.maxverbrauch;\n        ReactDOM.createRoot(document.getElementById(`${elementId}`)).render( /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result\",\n          children: [`maximaler Verbrauch von Gerät ${geraetNummer}`, \": \", maxverbrauch.toFixed(2), \" Wt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 85\n        }, this));\n      });\n    }\n  }\n  makerequest3();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${elementId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["React","axios","ReactDOM","getPowerConsumptionValue","geraetNummer","get","then","response","console","log","id","data","messung","getAvrgPowerConsumption","elementId","makerequest2","durchschnittsverbrauch","durchschnitsverbrauch","createRoot","document","getElementById","render","toFixed","getMaxPowerConsumption","makerequest3","maxverbrauch"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/PowerConsumption.js"],"sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n\nexport default  function getPowerConsumptionValue(geraetNummer) {\n   \n        if (geraetNummer !== '-1') {\n           return axios.get(`/api/getmqtt_messung/${geraetNummer}`).then(response => {\n                console.log(\"test\",response)\n                return {id: geraetNummer, data: response.data.messung};\n            })\n        }\n}\n\n// function getPowerConsumption(geraetNummer, elementId) {\n//     function makerequest() {\n//         if (geraetNummer !== '-1') {\n//             axios.get(`/api/getmqtt_messung/${geraetNummer}`).then(response => {\n//                 console.log(response)\n//                 var messung = response.data.messung;\n\n//                 ReactDOM.createRoot(document.getElementById(`${elementId}`)).render(<p\n//                     className=\"result\">{`aktueller Verbrauch von Gerät ${geraetNummer}`}: {messung.toFixed(2)} Wt</p>)\n//             })\n//         }\n//     }\n\n    \n//     makerequest()\n//     return (\n//         <>\n//             {<div id={`${elementId}`}></div>}\n//         </>\n//     )\n// }\n\nexport function getAvrgPowerConsumption(geraetNummer, elementId) {\n    function makerequest2() {\n        if (geraetNummer !== '-1') {\n            axios.get(`/api/get_average/${geraetNummer}`).then(response => {\n                console.log(response)\n                var durchschnittsverbrauch = response.data.durchschnitsverbrauch;\n\n                ReactDOM.createRoot(document.getElementById(`${elementId}`)).render(<p\n                    className=\"result\">{`durchschnittlicher Verbrauch von Gerät ${geraetNummer}`}: {durchschnittsverbrauch.toFixed(2)}Wt</p>)\n            })\n        }\n\n    }\n\n    makerequest2()\n    return (\n        <>\n            {<div id={`${elementId}`}></div>}\n        </>\n    )\n}\n\nexport function getMaxPowerConsumption(geraetNummer, elementId) {\n    function makerequest3() {\n        if (geraetNummer !== '-1') {\n            axios.get(`/api/get_maximum/${geraetNummer}`).then(response => {\n                console.log(response)\n                var maxverbrauch = response.data.maxverbrauch;\n\n                ReactDOM.createRoot(document.getElementById(`${elementId}`)).render(<p\n                    className=\"result\">{`maximaler Verbrauch von Gerät ${geraetNummer}`}: {maxverbrauch.toFixed(2)} Wt</p>)\n\n            })\n        }\n    }\n\n    makerequest3()\n    return (\n        <>\n            {<div id={`${elementId}`}></div>}\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAAC;AAAA;AAEjC,eAAgB,SAASC,wBAAwB,CAACC,YAAY,EAAE;EAExD,IAAIA,YAAY,KAAK,IAAI,EAAE;IACxB,OAAOH,KAAK,CAACI,GAAG,CAAE,wBAAuBD,YAAa,EAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;MACrEC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,QAAQ,CAAC;MAC5B,OAAO;QAACG,EAAE,EAAEN,YAAY;QAAEO,IAAI,EAAEJ,QAAQ,CAACI,IAAI,CAACC;MAAO,CAAC;IAC1D,CAAC,CAAC;EACN;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,uBAAuB,CAACT,YAAY,EAAEU,SAAS,EAAE;EAC7D,SAASC,YAAY,GAAG;IACpB,IAAIX,YAAY,KAAK,IAAI,EAAE;MACvBH,KAAK,CAACI,GAAG,CAAE,oBAAmBD,YAAa,EAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;QAC3DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIS,sBAAsB,GAAGT,QAAQ,CAACI,IAAI,CAACM,qBAAqB;QAEhEf,QAAQ,CAACgB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAE,GAAEN,SAAU,EAAC,CAAC,CAAC,CAACO,MAAM,eAAC;UAChE,SAAS,EAAC,QAAQ;UAAA,WAAG,0CAAyCjB,YAAa,EAAC,QAAIY,sBAAsB,CAACM,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,CAAC;MACjI,CAAC,CAAC;IACN;EAEJ;EAEAP,YAAY,EAAE;EACd,oBACI;IAAA,uBACK;MAAK,EAAE,EAAG,GAAED,SAAU;IAAE;MAAA;MAAA;MAAA;IAAA;EAAO,iBACjC;AAEX;AAEA,OAAO,SAASS,sBAAsB,CAACnB,YAAY,EAAEU,SAAS,EAAE;EAC5D,SAASU,YAAY,GAAG;IACpB,IAAIpB,YAAY,KAAK,IAAI,EAAE;MACvBH,KAAK,CAACI,GAAG,CAAE,oBAAmBD,YAAa,EAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;QAC3DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIkB,YAAY,GAAGlB,QAAQ,CAACI,IAAI,CAACc,YAAY;QAE7CvB,QAAQ,CAACgB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAE,GAAEN,SAAU,EAAC,CAAC,CAAC,CAACO,MAAM,eAAC;UAChE,SAAS,EAAC,QAAQ;UAAA,WAAG,iCAAgCjB,YAAa,EAAC,QAAIqB,YAAY,CAACH,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,CAAC;MAE/G,CAAC,CAAC;IACN;EACJ;EAEAE,YAAY,EAAE;EACd,oBACI;IAAA,uBACK;MAAK,EAAE,EAAG,GAAEV,SAAU;IAAE;MAAA;MAAA;MAAA;IAAA;EAAO,iBACjC;AAEX"},"metadata":{},"sourceType":"module"}