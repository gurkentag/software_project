{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js\";\nimport ReactDOM from 'react-dom/client';\nimport React from \"react\";\nimport App from './ChartActions';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Graphen von ausgewählten Geräten'\n    }\n  }\n};\nfunction changeData() {\n  const {\n    value\n  } = this.legendOptsInput;\n  var oldDataSet = this.state.datasets[0];\n  var newData = [65, 59, 80, 81, 56, 55, 69];\n  var newDataSet = {\n    ...oldDataSet\n  };\n  newDataSet.data = newData;\n  console.log('this is:', newDataSet.data);\n  var newState = {\n    datasets: [newDataSet]\n  };\n  try {\n    const opts = JSON.parse(value);\n    this.setState(newState);\n  } catch (e) {\n    alert(e.message);\n    throw Error(e);\n  }\n}\nfunction formatTimestamp(unixtimestamp) {\n  var date = new Date(unixtimestamp * 1000);\n  var hours = String('00' + date.getHours());\n  var minutes = String('00' + date.getMinutes());\n  var seconds = String('00' + date.getSeconds());\n  var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n  return formattedTime;\n}\nexport function plotComparison(messungen1, messungen2, geraetNummer1, geraetNummer2) {\n  if (messungen1 === [] || messungen2 === []) {\n    return;\n  }\n  messungen1 = messungen1.sort((a, b) => a[1] - b[1]);\n  const labels = messungen1.map(messungen => formatTimestamp(messungen[1]));\n  const data1 = messungen1.map(messungen => messungen[0].toFixed(2));\n  messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n  const data2 = messungen2.map(messungen => messungen[0].toFixed(2));\n  const data = {\n    labels,\n    datasets: [{\n      label: `Gerät ${geraetNummer1}`,\n      data: data1,\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }, {\n      label: `Gerät ${geraetNummer2}`,\n      data: data2,\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  };\n  ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render( /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'm-5',\n      id: \"graphdaten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeData,\n        children: \"Change data!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"names":["ReactDOM","React","App","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","options","responsive","plugins","legend","position","title","display","text","changeData","value","legendOptsInput","oldDataSet","state","datasets","newData","newDataSet","data","console","log","newState","opts","JSON","parse","setState","e","alert","message","Error","formatTimestamp","unixtimestamp","date","Date","hours","String","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substring","length","plotComparison","messungen1","messungen2","geraetNummer1","geraetNummer2","sort","a","b","labels","map","messungen","data1","toFixed","data2","label","borderColor","backgroundColor","createRoot","document","getElementById","render"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js"],"sourcesContent":["import ReactDOM from 'react-dom/client';\nimport React from \"react\";\nimport App from './ChartActions';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n  import { Line } from 'react-chartjs-2';\n\n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n  \n  export const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Graphen von ausgewählten Geräten',\n      },\n    },\n  };\n\n\n  function changeData() {\n    const { value } = this.legendOptsInput;\n    var oldDataSet = this.state.datasets[0];\n    var newData = [65, 59, 80, 81, 56, 55, 69];\n    var newDataSet = {\n      ...oldDataSet\n    };\n\n    newDataSet.data = newData;\n    console.log('this is:', newDataSet.data);\n\n    var newState = {\n      datasets: [newDataSet]\n    };\n    try {\n      const opts = JSON.parse(value);\n      this.setState(newState)\n    } catch(e) {\n      alert(e.message);\n      throw Error(e);\n    }\n  }\n\nfunction formatTimestamp(unixtimestamp) {\n    var date = new Date(unixtimestamp * 1000);\n    var hours = String('00' + date.getHours())\n    var minutes = String('00' + date.getMinutes());\n    var seconds = String('00' + date.getSeconds());\n    var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n    return formattedTime;\n}\n\nexport function plotComparison(messungen1, messungen2, geraetNummer1, geraetNummer2) {\n    if(messungen1 === [] || messungen2 === []){\n        return\n    }\n\n    messungen1 = messungen1.sort((a, b) => a[1] - b[1])\n    const labels = messungen1.map(messungen =>  formatTimestamp(messungen[1]));\n    const data1=messungen1.map(messungen => messungen[0].toFixed(2));\n    messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n    const data2 =  messungen2.map(messungen => messungen[0].toFixed(2));\n    const data = {\n        labels,\n        datasets: [\n          {\n            label: `Gerät ${geraetNummer1}`,\n            data: data1,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          },\n          {\n            label: `Gerät ${geraetNummer2}`,\n            data: data2,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          },\n        ],\n      };\n    ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render(\n        <Line options={options} data={data} />\n\n    \n    )\n\n    \n    return (\n        <>\n            {<div className={'m-5'} id=\"graphdaten\"></div>}\n            <div>\n        <button onClick={this.changeData}>Change data!</button>\n      </div>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}