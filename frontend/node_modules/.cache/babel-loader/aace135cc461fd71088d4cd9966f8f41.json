{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js\";\nimport axios from 'axios';\nimport ReactDOM from 'react-dom/client';\nimport { CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis } from \"recharts\";\nimport React from \"react\";\nimport { App } from './Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatTimestamp(unixtimestamp) {\n  var date = new Date(unixtimestamp * 1000);\n  var hours = String('00' + date.getHours());\n  var minutes = String('00' + date.getMinutes());\n  var seconds = String('00' + date.getSeconds());\n  var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n  return formattedTime;\n}\nexport function plotComparison(messungen1, messungen2) {\n  if (messungen1 === [] || messungen2 === []) {\n    return;\n  }\n  messungen1 = messungen1.sort((a, b) => a[1] - b[1]);\n  messungen1 = messungen1.map(messungen => [messungen[0].toFixed(2), formatTimestamp(messungen[1])]);\n  messungen2 = messungen2.sort((a, b) => a[1] - b[1]);\n  messungen2 = messungen2.map(messungen => [messungen[0].toFixed(2), formatTimestamp(messungen[1])]);\n  ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1400,\n      height: 400,\n      data: messungen1,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*/\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"0\",\n        domain: [0, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        name: `Gerät aus Liste 1`\n        //data={messungen1}\n        ,\n        type: \"monotone\",\n        dataKey: \"0\",\n        stroke: \"#274796\",\n        dot: false,\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        name: `Gerät aus Liste 2`,\n        data: messungen2,\n        type: \"monotone\",\n        dataKey: \"0\",\n        stroke: \"#F3942F\",\n        dot: false,\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this));\n}\nexport function getChartData(geraetNummer) {\n  function makerequest() {\n    if (geraetNummer === '-1') {\n      console.log(\"no number supllied\");\n      return;\n    }\n    axios.get(`/api/get_graph_daten/${geraetNummer}`).then(response => {\n      console.log(response);\n      var messungen = response.data.messungen;\n      messungen = messungen.sort((a, b) => a[1] - b[1]);\n      messungen = messungen.map(messungen => [messungen[0].toFixed(2), formatTimestamp(messungen[1])]);\n      ReactDOM.createRoot(document.getElementById(\"graphdaten\")).render( /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 1400,\n        height: 400,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"0\",\n          domain: [0, 8]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          name: `aktueller Verbrauch von Gerät ${geraetNummer}`,\n          data: messungen,\n          type: \"monotone\",\n          dataKey: \"0\",\n          stroke: \"#216d41\",\n          dot: false,\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this));\n    });\n  }\n  makerequest();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'm-5',\n      id: \"graphdaten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["axios","ReactDOM","CartesianGrid","Legend","Line","LineChart","Tooltip","XAxis","YAxis","React","App","formatTimestamp","unixtimestamp","date","Date","hours","String","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substring","length","plotComparison","messungen1","messungen2","sort","a","b","map","messungen","toFixed","createRoot","document","getElementById","render","top","right","left","bottom","getChartData","geraetNummer","makerequest","console","log","get","then","response","data"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js"],"sourcesContent":["import axios from 'axios';\nimport ReactDOM from 'react-dom/client';\nimport {CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis} from \"recharts\";\nimport React from \"react\";\nimport { App } from './Chart';\n\nfunction formatTimestamp(unixtimestamp) {\n    var date = new Date(unixtimestamp * 1000);\n    var hours = String('00' + date.getHours())\n    var minutes = String('00' + date.getMinutes());\n    var seconds = String('00' + date.getSeconds());\n    var formattedTime = hours.substring(hours.length - 2) + ':' + minutes.substring(minutes.length - 2) + ':' + seconds.substring(seconds.length - 2);\n    return formattedTime;\n}\n\nexport function plotComparison(messungen1, messungen2) {\n    if(messungen1 === [] || messungen2 === []){\n        return\n    }\n    messungen1 = messungen1.sort((a, b) => a[1] - b[1])\n    messungen1 = messungen1.map(messungen => ([messungen[0].toFixed(2), formatTimestamp(messungen[1])]))\n    messungen2 = messungen2.sort((a, b) => a[1] - b[1])\n    messungen2 = messungen2.map(messungen => ([messungen[0].toFixed(2), formatTimestamp(messungen[1])]))\n    ReactDOM.createRoot(document.getElementById(\"graphvergleich\")).render(\n        <div>\n        <LineChart\n            width={1400}\n            height={400}\n            data={messungen1}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*/ />\n            <YAxis dataKey=\"0\" domain={[0, 8]}/>\n            {/*<Tooltip/>*/}\n            <Legend/>\n            <Line name={`Gerät aus Liste 1`}\n                  //data={messungen1}\n                  type=\"monotone\"\n                  dataKey=\"0\"\n                  stroke=\"#274796\"\n                  dot={false}\n                  strokeWidth={2}\n            />\n            <Line name={`Gerät aus Liste 2`}\n                  data={messungen2}\n                  type=\"monotone\"\n                  dataKey=\"0\"\n                  stroke=\"#F3942F\"\n                  dot={false}\n                  strokeWidth={2}\n            />\n        </LineChart>\n        <App/>\n        </div>)\n}\n\nexport function getChartData(geraetNummer) {\n\n    function makerequest() {\n        if (geraetNummer === '-1') {\n            console.log(\"no number supllied\")\n            return\n        }\n        axios.get(`/api/get_graph_daten/${geraetNummer}`).then(response => {\n            console.log(response)\n            var messungen = response.data.messungen;\n            messungen = messungen.sort((a, b) => a[1] - b[1])\n            messungen = messungen.map(messungen => ([messungen[0].toFixed(2), formatTimestamp(messungen[1])]))\n\n            ReactDOM.createRoot(document.getElementById(\"graphdaten\")).render(\n                <LineChart\n                    width={1400}\n                    height={400}\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis dataKey=\"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*/ />\n                    <YAxis dataKey=\"0\" domain={[0, 8]}/>\n                    <Tooltip/>\n                    <Legend/>\n                    <Line name={`aktueller Verbrauch von Gerät ${geraetNummer}`}\n                          data={messungen}\n                          type=\"monotone\"\n                          dataKey=\"0\"\n                          stroke=\"#216d41\"\n                          dot={false}\n                          strokeWidth={2}\n                    />\n                </LineChart>)\n        })\n    }\n\n    makerequest()\n    return (\n        <>\n            {<div className={'m-5'} id=\"graphdaten\"></div>}\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}