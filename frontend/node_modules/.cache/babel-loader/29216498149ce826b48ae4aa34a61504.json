{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/NewSelect.js\";\nimport * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 14\n}, this);\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 21\n}, this);\nexport default function CheckboxesTags() {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: \"checkboxes-tags-demo\",\n    options: options,\n    disableCloseOnSelect: true,\n    getOptionLabel: option => option.title,\n    renderOption: (props, option, _ref) => {\n      let {\n        selected\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        ...props,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          icon: icon,\n          checkedIcon: checkedIcon,\n          style: {\n            marginRight: 8\n          },\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), option.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    },\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Ger\\xE4te zum Vergleich w\\xE4hlen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) //placeholder=\"Favorites\" />\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = CheckboxesTags;\nconst options = [{\n  value: '-1',\n  text: '--Wähle ein Gerät--'\n}];\nfor (var i = 1; i <= 56; i++) {\n  if (i !== 50 && i !== 30) {\n    options.push({\n      value: i,\n      text: `Gerät ${i}`\n    });\n  }\n}\nfunction makerequest1(geraetNummer) {\n  if (geraetNummer !== '-1') {\n    axios.get(`/api/get_graph_daten/${geraetNummer}`).then(response => {\n      console.log(response);\n      var messungen = response.data.messungen;\n      messungen1.current = messungen;\n      geraetNummer1 = geraetNummer;\n      plotComparison(messungen1.current, messungen2.current, geraetNummer1, geraetNummer2);\n    });\n  }\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n// const top100Films = [\n//   { title: 'The Shawshank Redemption', year: 1994 },\n//   { title: 'The Godfather', year: 1972 },\n//   { title: 'The Godfather: Part II', year: 1974 },\n//   { title: 'The Dark Knight', year: 2008 },\n//   { title: '12 Angry Men', year: 1957 },\n//   { title: \"Schindler's List\", year: 1993 },\n//   { title: 'Pulp Fiction', year: 1994 },\n//   {\n//     title: 'The Lord of the Rings: The Return of the King',\n//     year: 2003,\n//   },\n//   { title: 'The Good, the Bad and the Ugly', year: 1966 },\n//   { title: 'Fight Club', year: 1999 },\n//   {\n//     title: 'The Lord of the Rings: The Fellowship of the Ring',\n//     year: 2001,\n//   },\n//   {\n//     title: 'Star Wars: Episode V - The Empire Strikes Back',\n//     year: 1980,\n//   },\n//   { title: 'Forrest Gump', year: 1994 },\n//   { title: 'Inception', year: 2010 },\n//   {\n//     title: 'The Lord of the Rings: The Two Towers',\n//     year: 2002,\n//   },\n//   { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n//   { title: 'Goodfellas', year: 1990 },\n//   { title: 'The Matrix', year: 1999 },\n//   { title: 'Seven Samurai', year: 1954 },\n//   {\n//     title: 'Star Wars: Episode IV - A New Hope',\n//     year: 1977,\n//   },\n//   { title: 'City of God', year: 2002 },\n//   { title: 'Se7en', year: 1995 },\n//   { title: 'The Silence of the Lambs', year: 1991 },\n//   { title: \"It's a Wonderful Life\", year: 1946 },\n//   { title: 'Life Is Beautiful', year: 1997 },\n//   { title: 'The Usual Suspects', year: 1995 },\n//   { title: 'Léon: The Professional', year: 1994 },\n//   { title: 'Spirited Away', year: 2001 },\n//   { title: 'Saving Private Ryan', year: 1998 },\n//   { title: 'Once Upon a Time in the West', year: 1968 },\n//   { title: 'American History X', year: 1998 },\n//   { title: 'Interstellar', year: 2014 },\n// ];\nvar _c;\n$RefreshReg$(_c, \"CheckboxesTags\");","map":{"version":3,"names":["React","Checkbox","TextField","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","icon","checkedIcon","CheckboxesTags","options","option","title","props","selected","marginRight","width","params","value","text","i","push","makerequest1","geraetNummer","axios","get","then","response","console","log","messungen","data","messungen1","current","geraetNummer1","plotComparison","messungen2","geraetNummer2"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/NewSelect.js"],"sourcesContent":["import * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags() {\n  return (\n    <Autocomplete\n      multiple\n      id=\"checkboxes-tags-demo\"\n      options={options}\n      disableCloseOnSelect\n      getOptionLabel={(option) => option.title}\n      renderOption={(props, option, { selected }) => (\n        <li {...props}>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {option.title}\n        </li>\n      )}\n      style={{ width: 500 }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Geräte zum Vergleich wählen\"/> //placeholder=\"Favorites\" />\n      )}\n    />\n  );\n}\n\nconst options = [\n    {value: '-1', text: '--Wähle ein Gerät--'}\n];\nfor (var i = 1; i <= 56; i++) {\n    if(i!==50 && i!==30){\n    options.push({value: i, text: `Gerät ${i}`});\n    }\n}\n\nfunction makerequest1(geraetNummer) {\n    if (geraetNummer !== '-1') {\n        axios.get(`/api/get_graph_daten/${geraetNummer}`).then(response => {\n            console.log(response)\n            var messungen = response.data.messungen;\n            messungen1.current = messungen;\n            geraetNummer1 = geraetNummer;\n            plotComparison(messungen1.current, messungen2.current, geraetNummer1, geraetNummer2);\n        })\n    }\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n// const top100Films = [\n//   { title: 'The Shawshank Redemption', year: 1994 },\n//   { title: 'The Godfather', year: 1972 },\n//   { title: 'The Godfather: Part II', year: 1974 },\n//   { title: 'The Dark Knight', year: 2008 },\n//   { title: '12 Angry Men', year: 1957 },\n//   { title: \"Schindler's List\", year: 1993 },\n//   { title: 'Pulp Fiction', year: 1994 },\n//   {\n//     title: 'The Lord of the Rings: The Return of the King',\n//     year: 2003,\n//   },\n//   { title: 'The Good, the Bad and the Ugly', year: 1966 },\n//   { title: 'Fight Club', year: 1999 },\n//   {\n//     title: 'The Lord of the Rings: The Fellowship of the Ring',\n//     year: 2001,\n//   },\n//   {\n//     title: 'Star Wars: Episode V - The Empire Strikes Back',\n//     year: 1980,\n//   },\n//   { title: 'Forrest Gump', year: 1994 },\n//   { title: 'Inception', year: 2010 },\n//   {\n//     title: 'The Lord of the Rings: The Two Towers',\n//     year: 2002,\n//   },\n//   { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n//   { title: 'Goodfellas', year: 1990 },\n//   { title: 'The Matrix', year: 1999 },\n//   { title: 'Seven Samurai', year: 1954 },\n//   {\n//     title: 'Star Wars: Episode IV - A New Hope',\n//     year: 1977,\n//   },\n//   { title: 'City of God', year: 2002 },\n//   { title: 'Se7en', year: 1995 },\n//   { title: 'The Silence of the Lambs', year: 1991 },\n//   { title: \"It's a Wonderful Life\", year: 1946 },\n//   { title: 'Life Is Beautiful', year: 1997 },\n//   { title: 'The Usual Suspects', year: 1995 },\n//   { title: 'Léon: The Professional', year: 1994 },\n//   { title: 'Spirited Away', year: 2001 },\n//   { title: 'Saving Private Ryan', year: 1998 },\n//   { title: 'Once Upon a Time in the West', year: 1968 },\n//   { title: 'American History X', year: 1998 },\n//   { title: 'Interstellar', year: 2014 },\n// ];"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,wBAAwB,MAAM,0CAA0C;AAC/E,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAExD,MAAMC,IAAI,gBAAG,QAAC,wBAAwB;EAAC,QAAQ,EAAC;AAAO;EAAA;EAAA;EAAA;AAAA,QAAG;AAC1D,MAAMC,WAAW,gBAAG,QAAC,YAAY;EAAC,QAAQ,EAAC;AAAO;EAAA;EAAA;EAAA;AAAA,QAAG;AAErD,eAAe,SAASC,cAAc,GAAG;EACvC,oBACE,QAAC,YAAY;IACX,QAAQ;IACR,EAAE,EAAC,sBAAsB;IACzB,OAAO,EAAEC,OAAQ;IACjB,oBAAoB;IACpB,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACC,KAAM;IACzC,YAAY,EAAE,CAACC,KAAK,EAAEF,MAAM;MAAA,IAAE;QAAEG;MAAS,CAAC;MAAA,oBACxC;QAAA,GAAQD,KAAK;QAAA,wBACX,QAAC,QAAQ;UACP,IAAI,EAAEN,IAAK;UACX,WAAW,EAAEC,WAAY;UACzB,KAAK,EAAE;YAAEO,WAAW,EAAE;UAAE,CAAE;UAC1B,OAAO,EAAED;QAAS;UAAA;UAAA;UAAA;QAAA,QAClB,EACDH,MAAM,CAACC,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACV;IAAA,CACL;IACF,KAAK,EAAE;MAAEI,KAAK,EAAE;IAAI,CAAE;IACtB,WAAW,EAAGC,MAAM,iBAClB,QAAC,SAAS;MAAA,GAAKA,MAAM;MAAE,KAAK,EAAC;IAA6B;MAAA;MAAA;MAAA;IAAA,QAAE,CAAC;EAC7D;IAAA;IAAA;IAAA;EAAA,QACF;AAEN;AAAC,KAzBuBR,cAAc;AA2BtC,MAAMC,OAAO,GAAG,CACZ;EAACQ,KAAK,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAqB,CAAC,CAC7C;AACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;EAC1B,IAAGA,CAAC,KAAG,EAAE,IAAIA,CAAC,KAAG,EAAE,EAAC;IACpBV,OAAO,CAACW,IAAI,CAAC;MAACH,KAAK,EAAEE,CAAC;MAAED,IAAI,EAAG,SAAQC,CAAE;IAAC,CAAC,CAAC;EAC5C;AACJ;AAEA,SAASE,YAAY,CAACC,YAAY,EAAE;EAChC,IAAIA,YAAY,KAAK,IAAI,EAAE;IACvBC,KAAK,CAACC,GAAG,CAAE,wBAAuBF,YAAa,EAAC,CAAC,CAACG,IAAI,CAACC,QAAQ,IAAI;MAC/DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAIG,SAAS,GAAGH,QAAQ,CAACI,IAAI,CAACD,SAAS;MACvCE,UAAU,CAACC,OAAO,GAAGH,SAAS;MAC9BI,aAAa,GAAGX,YAAY;MAC5BY,cAAc,CAACH,UAAU,CAACC,OAAO,EAAEG,UAAU,CAACH,OAAO,EAAEC,aAAa,EAAEG,aAAa,CAAC;IACxF,CAAC,CAAC;EACN;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}