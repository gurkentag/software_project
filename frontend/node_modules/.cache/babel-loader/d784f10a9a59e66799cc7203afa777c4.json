{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/NewSelect.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { useRef, useState } from 'react';\nimport getPowerConsumption, { getAvrgPowerConsumption, getMaxPowerConsumption } from './PowerConsumption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 14\n}, this);\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 21\n}, this);\nexport default function CheckboxesTags() {\n  _s();\n  const [selected, setSelected] = React.useState('');\n  const handleChange = event => {\n    setSelected(event.target.value);\n  };\n  const options = [];\n  for (var i = 1; i <= 56; i++) {\n    if (i !== 50 && i !== 30) {\n      options.push({\n        value: i,\n        text: `Ger채t ${i}`\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: \"checkboxes-tags-demo\",\n    options: options,\n    disableCloseOnSelect: true,\n    getOptionLabel: option => option.text,\n    renderOption: (props, option, _ref) => {\n      let {\n        selected\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        ...props,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          icon: icon,\n          checkedIcon: checkedIcon,\n          style: {\n            marginRight: 8\n          },\n          checked: selected,\n          value: selected,\n          onChange: handleChange1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), option.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    },\n    style: {\n      width: 500,\n      marginTop: 10,\n      marginLeft: 0,\n      paddingLeft: 150\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Ger\\xE4te zum Vergleich w\\xE4hlen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) //placeholder=\"Favorites\" />\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n  {\n    getPowerConsumption(selected, \"PowerConsumptionFirstDevice\");\n  }\n  {\n    getAvrgPowerConsumption(selected, \"AvrgPowerConsumptionFirstDevice\");\n  }\n  {\n    getMaxPowerConsumption(selected, \"MaxPowerConsumptionFirstDevice\");\n  }\n}\n_s(CheckboxesTags, \"18RT5nPrBTPIyYXVolwVU2o0VQI=\");\n_c = CheckboxesTags;\nvar _c;\n$RefreshReg$(_c, \"CheckboxesTags\");","map":{"version":3,"names":["React","Checkbox","TextField","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","useRef","useState","getPowerConsumption","getAvrgPowerConsumption","getMaxPowerConsumption","icon","checkedIcon","CheckboxesTags","selected","setSelected","handleChange","event","target","value","options","i","push","text","option","props","marginRight","handleChange1","width","marginTop","marginLeft","paddingLeft","params"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/NewSelect.js"],"sourcesContent":["import * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport  {useRef, useState} from 'react';\nimport getPowerConsumption, {getAvrgPowerConsumption, getMaxPowerConsumption} from './PowerConsumption'\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags() {\n    const [selected, setSelected] = React.useState('');\n    const handleChange = (event) => {\n        setSelected(event.target.value);\n    };\n    const options = [];\nfor (var i = 1; i <= 56; i++) {\n    if(i!==50 && i!==30){\n    options.push({value: i, text: `Ger채t ${i}`});\n    }\n}\n  return (\n    <Autocomplete\n      multiple\n      id=\"checkboxes-tags-demo\"\n      options={options}\n      disableCloseOnSelect\n      getOptionLabel={(option) => option.text}\n\n      \n      renderOption={(props, option, { selected }) => (\n        <li {...props}>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n             value={selected} onChange={handleChange1}\n        \n\n          />\n          {option.text}\n        </li>\n      )}\n      style={{ width: 500, marginTop: 10, marginLeft:0, paddingLeft:150, }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Ger채te zum Vergleich w채hlen\"/> //placeholder=\"Favorites\" />\n      )}\n    />\n  )\n    {getPowerConsumption(selected, \"PowerConsumptionFirstDevice\")}\n                                {getAvrgPowerConsumption(selected, \"AvrgPowerConsumptionFirstDevice\")}\n                                {getMaxPowerConsumption(selected, \"MaxPowerConsumptionFirstDevice\")}\n  \n}\n\n\n\n\n\n\n    \n\n\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,wBAAwB,MAAM,0CAA0C;AAC/E,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACvC,OAAOC,mBAAmB,IAAGC,uBAAuB,EAAEC,sBAAsB,QAAO,oBAAoB;AAAA;AACvG,MAAMC,IAAI,gBAAG,QAAC,wBAAwB;EAAC,QAAQ,EAAC;AAAO;EAAA;EAAA;EAAA;AAAA,QAAG;AAC1D,MAAMC,WAAW,gBAAG,QAAC,YAAY;EAAC,QAAQ,EAAC;AAAO;EAAA;EAAA;EAAA;AAAA,QAAG;AAErD,eAAe,SAASC,cAAc,GAAG;EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC5BF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EACD,MAAMC,OAAO,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAGA,CAAC,KAAG,EAAE,IAAIA,CAAC,KAAG,EAAE,EAAC;MACpBD,OAAO,CAACE,IAAI,CAAC;QAACH,KAAK,EAAEE,CAAC;QAAEE,IAAI,EAAG,SAAQF,CAAE;MAAC,CAAC,CAAC;IAC5C;EACJ;EACE,oBACE,QAAC,YAAY;IACX,QAAQ;IACR,EAAE,EAAC,sBAAsB;IACzB,OAAO,EAAED,OAAQ;IACjB,oBAAoB;IACpB,cAAc,EAAGI,MAAM,IAAKA,MAAM,CAACD,IAAK;IAGxC,YAAY,EAAE,CAACE,KAAK,EAAED,MAAM;MAAA,IAAE;QAAEV;MAAS,CAAC;MAAA,oBACxC;QAAA,GAAQW,KAAK;QAAA,wBACX,QAAC,QAAQ;UACP,IAAI,EAAEd,IAAK;UACX,WAAW,EAAEC,WAAY;UACzB,KAAK,EAAE;YAAEc,WAAW,EAAE;UAAE,CAAE;UAC1B,OAAO,EAAEZ,QAAS;UACjB,KAAK,EAAEA,QAAS;UAAC,QAAQ,EAAEa;QAAc;UAAA;UAAA;UAAA;QAAA,QAG1C,EACDH,MAAM,CAACD,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACT;IAAA,CACL;IACF,KAAK,EAAE;MAAEK,KAAK,EAAE,GAAG;MAAEC,SAAS,EAAE,EAAE;MAAEC,UAAU,EAAC,CAAC;MAAEC,WAAW,EAAC;IAAK,CAAE;IACrE,WAAW,EAAGC,MAAM,iBAClB,QAAC,SAAS;MAAA,GAAKA,MAAM;MAAE,KAAK,EAAC;IAA6B;MAAA;MAAA;MAAA;IAAA,QAAE,CAAC;EAC7D;IAAA;IAAA;IAAA;EAAA,QACF;EAEF;IAACxB,mBAAmB,CAACM,QAAQ,EAAE,6BAA6B,CAAC;EAAA;EACjC;IAACL,uBAAuB,CAACK,QAAQ,EAAE,iCAAiC,CAAC;EAAA;EACrE;IAACJ,sBAAsB,CAACI,QAAQ,EAAE,gCAAgC,CAAC;EAAA;AAEnG;AAAC,GA5CuBD,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}