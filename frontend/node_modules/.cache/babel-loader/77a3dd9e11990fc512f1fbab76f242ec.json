{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js\";\nimport axios from 'axios';\nimport ReactDOM from 'react-dom/client';\nimport { CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis } from \"recharts\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function getChartData(geraetNummer) {\n  function formatTimestamp(unixtimestamp) {\n    var date = new Date(unixtimestamp * 1000);\n    var hours = date.getHours() + 1;\n    var minutes = String(date.getMinutes());\n    var seconds = String(date.getSeconds());\n    var formattedTime = hours + ':' + minutes.substring(-2) + ':' + seconds.substring(-2);\n    return formattedTime;\n  }\n  function makerequest() {\n    axios.get(`/api/get_graph_daten/${geraetNummer}`).then(response => {\n      console.log(response);\n      var messungen = response.data.messungen;\n      messungen = messungen.sort((a, b) => a[1] - b[1]);\n      messungen = messungen.map(messungen => [messungen[0], formatTimestamp(messungen[1])]);\n      ReactDOM.createRoot(document.getElementById(\"graphdaten\")).render( /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 1400,\n        height: 400,\n        data: messungen,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"0\",\n          domain: [0, 8]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          name: \"aktueller Verbrauch\",\n          type: \"monotone\",\n          dataKey: \"0\",\n          stroke: \"#82ca9d\",\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this));\n    });\n  }\n  makerequest();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"graphdaten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["axios","ReactDOM","CartesianGrid","Legend","Line","LineChart","Tooltip","XAxis","YAxis","React","getChartData","geraetNummer","formatTimestamp","unixtimestamp","date","Date","hours","getHours","minutes","String","getMinutes","seconds","getSeconds","formattedTime","substring","makerequest","get","then","response","console","log","messungen","data","sort","a","b","map","createRoot","document","getElementById","render","top","right","left","bottom"],"sources":["/Users/aleksandrapeshkina/projects/swtp-2022-07/frontend/src/ChartData.js"],"sourcesContent":["import axios from 'axios';\nimport ReactDOM from 'react-dom/client';\nimport {CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis} from \"recharts\";\nimport React from \"react\";\n\nexport default function getChartData(geraetNummer) {\n    function formatTimestamp(unixtimestamp) {\n        var date = new Date(unixtimestamp * 1000);\n        var hours = date.getHours() + 1;\n        var minutes = String(date.getMinutes());\n        var seconds = String(date.getSeconds());\n        var formattedTime = hours + ':' + minutes.substring(-2) + ':' + seconds.substring(-2);\n        return formattedTime;\n    }\n    \n\n    function makerequest() {\n        axios.get(`/api/get_graph_daten/${geraetNummer}`).then(response => {\n            console.log(response)\n            var messungen = response.data.messungen;\n            messungen = messungen.sort((a, b) => a[1] - b[1])\n            messungen = messungen.map(messungen => ([messungen[0], formatTimestamp(messungen[1])]))\n\n            ReactDOM.createRoot(document.getElementById(\"graphdaten\")).render(\n                <LineChart\n                    width={1400}\n                    height={400}\n                    data={messungen}\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis dataKey=\"1\" /*label={{value: ``, position: \"insideBottomLeft\", dy: 25}}*//>\n                    <YAxis dataKey=\"0\" domain={[0, 8]}/>\n                    <Tooltip/>\n                    <Legend/>\n                    <Line name=\"aktueller Verbrauch\" type=\"monotone\" dataKey=\"0\" stroke=\"#82ca9d\" dot={false}/>\n                </LineChart>)\n        })\n    }\n\n    makerequest()\n    return (\n        <>\n            {<div id=\"graphdaten\"></div>}\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAAQC,aAAa,EAAEC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAO,UAAU;AACtF,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,eAAe,SAASC,YAAY,CAACC,YAAY,EAAE;EAC/C,SAASC,eAAe,CAACC,aAAa,EAAE;IACpC,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACF,aAAa,GAAG,IAAI,CAAC;IACzC,IAAIG,KAAK,GAAGF,IAAI,CAACG,QAAQ,EAAE,GAAG,CAAC;IAC/B,IAAIC,OAAO,GAAGC,MAAM,CAACL,IAAI,CAACM,UAAU,EAAE,CAAC;IACvC,IAAIC,OAAO,GAAGF,MAAM,CAACL,IAAI,CAACQ,UAAU,EAAE,CAAC;IACvC,IAAIC,aAAa,GAAGP,KAAK,GAAG,GAAG,GAAGE,OAAO,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,OAAO,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;IACrF,OAAOD,aAAa;EACxB;EAGA,SAASE,WAAW,GAAG;IACnBzB,KAAK,CAAC0B,GAAG,CAAE,wBAAuBf,YAAa,EAAC,CAAC,CAACgB,IAAI,CAACC,QAAQ,IAAI;MAC/DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAIG,SAAS,GAAGH,QAAQ,CAACI,IAAI,CAACD,SAAS;MACvCA,SAAS,GAAGA,SAAS,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjDJ,SAAS,GAAGA,SAAS,CAACK,GAAG,CAACL,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC,EAAEnB,eAAe,CAACmB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;MAEvF9B,QAAQ,CAACoC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAAC,CAACC,MAAM,eAC7D,QAAC,SAAS;QACN,KAAK,EAAE,IAAK;QACZ,MAAM,EAAE,GAAI;QACZ,IAAI,EAAET,SAAU;QAChB,MAAM,EAAE;UACJU,GAAG,EAAE,CAAC;UACNC,KAAK,EAAE,EAAE;UACTC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;QACZ,CAAE;QAAA,wBAEF,QAAC,aAAa;UAAC,eAAe,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAE,eACtC,QAAC,KAAK;UAAC,OAAO,EAAC,GAAG,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAA+D,eAClF,QAAC,KAAK;UAAC,OAAO,EAAC,GAAG;UAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eACpC,QAAC,OAAO;UAAA;UAAA;UAAA;QAAA,QAAE,eACV,QAAC,MAAM;UAAA;UAAA;UAAA;QAAA,QAAE,eACT,QAAC,IAAI;UAAC,IAAI,EAAC,qBAAqB;UAAC,IAAI,EAAC,UAAU;UAAC,OAAO,EAAC,GAAG;UAAC,MAAM,EAAC,SAAS;UAAC,GAAG,EAAE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACnF,CAAC;IACrB,CAAC,CAAC;EACN;EAEAnB,WAAW,EAAE;EACb,oBACI;IAAA,uBACK;MAAK,EAAE,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA;EAAO,iBAC7B;AAEX"},"metadata":{},"sourceType":"module"}